---
# Dockge Management - Docker Compose Stack Manager Deployment and Management
# Part of the ansible-pull automation system

- name: "Dockge Management - Set deployment variables"
  set_fact:
    dockge_base_dir: "/opt/storage/lab-fast/projects/hosted-services/dockge"
    dockge_data_dir: "/opt/storage/lab-fast/projects/hosted-services/dockge/data"
    dockge_stacks_dir: "/opt/storage/lab-fast/projects/hosted-services"
    dockge_port: "5001"
    dockge_enabled: true  # Set to false to disable Dockge management

- name: "Dockge Management - Ensure deployment directory exists"
  file:
    path: "{{ dockge_base_dir }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes
  when: dockge_enabled | default(true) | bool

- name: "Dockge Management - Ensure data directory exists"
  file:
    path: "{{ dockge_data_dir }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes
  when: dockge_enabled | default(true) | bool

- name: "Dockge Management - Create docker-compose.yml"
  copy:
    content: |
      version: "3.8"

      services:
        dockge:
          image: louislam/dockge:1
          restart: unless-stopped
          ports:
            - "{{ dockge_port }}:5001"
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - {{ dockge_data_dir }}:/app/data
            - {{ dockge_stacks_dir }}:/opt/stacks
          environment:
            - DOCKGE_STACKS_DIR=/opt/stacks
            - TZ=America/Los_Angeles
          labels:
            - "traefik.enable=false"
          networks:
            - dockge-network
          container_name: dockge

      networks:
        dockge-network:
          driver: bridge
    dest: "{{ dockge_base_dir }}/docker-compose.yml"
    owner: root
    group: root
    mode: '0644'
    backup: yes
  become: yes
  when: dockge_enabled | default(true) | bool
  register: dockge_compose_updated

- name: "Dockge Management - Create .env file"
  copy:
    content: |
      # Dockge Configuration
      # Generated by ansible-pull automation

      # Port for Dockge web interface
      DOCKGE_PORT={{ dockge_port }}

      # Directory where Dockge stores its data
      DOCKGE_DATA_DIR=./data

      # Directory where docker-compose stacks are managed
      DOCKGE_STACKS_DIR=/opt/stacks

      # Timezone
      TZ=America/Los_Angeles

      # Hostname
      HOSTNAME=dockge-server
    dest: "{{ dockge_base_dir }}/.env"
    owner: root
    group: root
    mode: '0644'
    backup: yes
  become: yes
  when: dockge_enabled | default(true) | bool

- name: "Dockge Management - Check if Dockge container is running"
  command: docker ps -q -f name=dockge
  register: dockge_running
  changed_when: false
  become: yes
  when: dockge_enabled | default(true) | bool

- name: "Dockge Management - Pull latest Dockge image"
  command: docker compose -f {{ dockge_base_dir }}/docker-compose.yml pull
  become: yes
  when: dockge_enabled | default(true) | bool
  register: dockge_pull_result

- name: "Dockge Management - Start/Update Dockge service"
  command: docker compose -f {{ dockge_base_dir }}/docker-compose.yml up -d
  become: yes
  when: dockge_enabled | default(true) | bool
  register: dockge_start_result

- name: "Dockge Management - Wait for Dockge to be ready"
  wait_for:
    port: "{{ dockge_port }}"
    host: localhost
    delay: 10
    timeout: 60
  when: dockge_enabled | default(true) | bool
  register: dockge_ready

- name: "Dockge Management - Check Dockge container status"
  shell: docker inspect dockge --format '{{"{{"}} .State.Status {{"}}"}}' 2>/dev/null || echo "not found"
  register: dockge_health
  failed_when: false
  changed_when: false
  become: yes
  when: dockge_enabled | default(true) | bool

- name: "Dockge Management - Get container details"
  command: docker ps -f name=dockge --format "{{"{{"}} .Names {{"}}"}} - {{"{{"}} .Status {{"}}"}} - {{"{{"}} .Ports {{"}}"}}"
  register: dockge_status
  failed_when: false
  changed_when: false
  become: yes
  when: dockge_enabled | default(true) | bool

- name: "Dockge Management - Create systemd service file (optional)"
  copy:
    content: |
      [Unit]
      Description=Dockge - Docker Compose Stack Manager
      Requires=docker.service
      After=docker.service

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      WorkingDirectory={{ dockge_base_dir }}
      ExecStart=/usr/bin/docker compose up -d
      ExecStop=/usr/bin/docker compose down
      TimeoutStartSec=0

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/dockge.service
    owner: root
    group: root
    mode: '0644'
  become: yes
  when: dockge_enabled | default(true) | bool and false  # Disabled by default, enable if needed
  notify: reload systemd

- name: "Dockge Management - Clean up old images"
  command: docker image prune -f
  become: yes
  when: dockge_enabled | default(true) | bool and dockge_pull_result.changed
  ignore_errors: yes

- name: "Dockge Management - Log deployment status"
  debug:
    msg: |
      Dockge Deployment Status:
      - Service: {{ 'ENABLED' if dockge_enabled else 'DISABLED' }}
      - Container Running: {{ 'YES' if dockge_running.stdout else 'NO' }}
      - Port: {{ dockge_port }}
      - Web Interface: http://localhost:{{ dockge_port }}
      - Data Directory: {{ dockge_data_dir }}
      - Stacks Directory: {{ dockge_stacks_dir }}
      - Configuration Updated: {{ 'YES' if dockge_compose_updated.changed else 'NO' }}
      - Image Updated: {{ 'YES' if dockge_pull_result.changed else 'NO' }}
      - Service Ready: {{ 'YES' if dockge_ready is succeeded else 'NO' }}
      - Container Details: {{ dockge_status.stdout if dockge_status.stdout else 'Not Available' }}

- name: "Dockge Management - Send log message"
  shell: |
    logger -p user.info -t "ansible-pull-dockge" "Dockge management completed - Status: {{ 'Running' if dockge_running.stdout else 'Stopped' }}, Port: {{ dockge_port }}, Updates: {{ 'Yes' if (dockge_compose_updated.changed or dockge_pull_result.changed) else 'No' }}"
  become: yes
  when: dockge_enabled | default(true) | bool