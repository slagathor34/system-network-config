---
# Main ansible-pull orchestration playbook
# This playbook runs hourly via ansible-pull to ensure system configuration compliance
# and nightly for maintenance tasks

- name: "System Configuration Management and Maintenance"
  hosts: localhost
  become: yes
  gather_facts: yes
  vars:
    repo_url: "https://github.com/slagathor34/system-network-config.git"
    config_backup_dir: "/opt/backups/netplan"
    validation_log: "/var/log/ansible-pull-network.log"
    revert_threshold_minutes: 60  # Revert if issues persist for more than 60 minutes
    
  tasks:
    - name: "Create log directory"
      file:
        path: "/var/log"
        state: directory
        mode: '0755'

    - name: "Determine execution schedule based on time and variables"
      set_fact:
        is_nightly_run: "{{ ansible_date_time.hour | int >= 2 and ansible_date_time.hour | int <= 4 }}"
        is_weekly_run: "{{ is_weekly_run | default(false) | bool }}"
        execution_type: "{{ 'weekly' if (is_weekly_run | default(false) | bool) else ('nightly' if (ansible_date_time.hour | int >= 2 and ansible_date_time.hour | int <= 4) else 'hourly') }}"

    - name: "Log execution start"
      lineinfile:
        path: "{{ validation_log }}"
        line: "{{ ansible_date_time.iso8601 }} - Ansible-pull {{ execution_type }} execution started"
        create: yes

    # Hourly Tasks - Core System Configuration Management
    - name: "Execute hourly configuration tasks"
      block:
        - name: "Package installation and management"
          include_tasks: tasks/hourly/package-management.yml

        - name: "Network validation and configuration"
          include_tasks: tasks/hourly/network-validation.yml

        - name: "Network subnet isolation validation"
          include_tasks: tasks/hourly/network-subnet-validation.yml

        - name: "Docker configuration management"
          include_tasks: tasks/hourly/docker-management.yml

        - name: "Cockpit web console management"
          include_tasks: tasks/hourly/cockpit-management.yml

        - name: "NFS mount management"
          include_tasks: tasks/hourly/nfs-management.yml

        - name: "Ollama AI service management"
          include_tasks: tasks/hourly/ollama-management.yml

        - name: "GPU optimization management"
          include_tasks: tasks/hourly/gpu-optimization.yml

        - name: "NUT (Network UPS Tools) management"
          include_tasks: tasks/hourly/nut-management.yml

        - name: "Python 3.12 system management"
          include_tasks: tasks/hourly/python-management.yml

        - name: "Docker AI MCP toolkit and gateway management"
          include_tasks: tasks/hourly/mcp-management.yml

        - name: "Rsyslog configuration and management"
          include_tasks: tasks/hourly/rsyslog-management.yml

        - name: "NTP time synchronization and timezone management"
          include_tasks: tasks/hourly/ntp-management.yml

        - name: "Dockge Docker Compose stack manager"
          include_tasks: tasks/hourly/dockge-management.yml

        - name: "Nextcloud trusted domains management"
          include_tasks: tasks/hourly/nextcloud-management.yml

      rescue:
        - name: "Log hourly task failure"
          lineinfile:
            path: "{{ validation_log }}"
            line: "{{ ansible_date_time.iso8601 }} - HOURLY TASK FAILURE - {{ ansible_failed_task.name | default('Unknown task') }}"

        - name: "Notify validation failure handler"
          set_fact:
            validation_failed: true

    # Nightly Tasks - System Maintenance and Cleanup
    - name: "Execute nightly maintenance tasks"
      block:
        - name: "Cache cleanup and resource management"
          include_tasks: tasks/nightly/cache-cleanup.yml

        - name: "System optimization and maintenance"
          include_tasks: tasks/nightly/system-maintenance.yml

      when: is_nightly_run | bool
      rescue:
        - name: "Log nightly task failure"
          lineinfile:
            path: "{{ validation_log }}"
            line: "{{ ansible_date_time.iso8601 }} - NIGHTLY TASK FAILURE - {{ ansible_failed_task.name | default('Unknown task') }}"

    # Weekly Tasks - System Updates and Maintenance
    - name: "Execute weekly update tasks"
      block:
        - name: "Clean up old netplan backups"
          include_tasks: tasks/weekly/backup-cleanup.yml

        - name: "System package updates and reboot"
          include_tasks: tasks/weekly/system-updates.yml

      when: is_weekly_run | bool
      rescue:
        - name: "Log weekly task failure"
          lineinfile:
            path: "{{ validation_log }}"
            line: "{{ ansible_date_time.iso8601 }} - WEEKLY TASK FAILURE - {{ ansible_failed_task.name | default('Unknown task') }}"

    - name: "Log successful completion"
      lineinfile:
        path: "{{ validation_log }}"
        line: "{{ ansible_date_time.iso8601 }} - Ansible-pull {{ execution_type }} execution completed successfully"

  handlers:
    - name: "Log validation failure"
      lineinfile:
        path: "{{ validation_log }}"
        line: "{{ ansible_date_time.iso8601 }} - VALIDATION FAILED"
      listen: "validation failed"

    - name: restart rsyslog
      systemd:
        name: rsyslog
        state: restarted
      become: yes

    - name: restart systemd-timesyncd
      systemd:
        name: systemd-timesyncd
        state: restarted
      become: yes

    - name: reload systemd
      systemd:
        daemon_reload: yes
      become: yes